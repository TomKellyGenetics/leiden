# DO NOT CHANGE the "init" and "install" sections below

image: Visual Studio 2015



environment:
  global:
    PATH: C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Windows\System32;C:\Windows;%PATH%
    R_ARCH: x64
    NOT_CRAN: true
    USE_RTOOLS: true
    _R_CHECK_FORCE_SUGGESTS_: false
  matrix:
    - PYTHON: "C:\\Python35"
      RETICULATE_PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
      RETICULATE_PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python37"
      RETICULATE_PYTHON: "C:\\Python37"

matrix:
  fast_finish: true

# Download script file from GitHub
init:
  - ps: |
        $ErrorActionPreference = "Stop"
        Invoke-WebRequest http://raw.github.com/krlmlr/r-appveyor/master/scripts/appveyor-tool.ps1 -OutFile "..\appveyor-tool.ps1"
        Import-Module '..\appveyor-tool.ps1'
  - cmd: "ECHO %PYTHON_VERSION% %CONDA_INSTALL_LOCN%"

install:
    # If there is a newer build queued for the same PR, cancel this one.
    # The AppVeyor 'rollout builds' option is supposed to serve the same
    # purpose but it is problematic because it tends to cancel builds pushed
    # directly to master instead of just PR builds (or the converse).
    # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }


    # setup conda environment for building
  - cmd: set "PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\scripts;%PATH%"
  - cmd: set PYTHONUNBUFFERED=1

    # update mysy2
  - C:\msys64\usr\bin\bash -lc "pacman --needed --noconfirm -Sy pacman-mirrors"
  - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -Sy"
  - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S autoconf automake bison flex"
  - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S libxml2-devel zip"


    # also install a msvc build environment -> use libxml2 from conda-forge
    # updating conda always updates python, even with "no-update-deps" and
    # updating python takes ages on appveyor... So just keep the shorter PATH
    # workaround for the activate failure and don't update conda itself...
    #- cmd: conda update conda --no-update-dependencies
  - cmd: conda config --add channels conda-forge
  - cmd: conda config --set show_channel_urls yes
  - cmd: conda config --set always_yes true
  - cmd: if [%PYTHON_VERSION%] NEQ [NONE] conda install --quiet libxml2 python=%PYTHON_VERSION%
  - cmd: conda info -a

    # Now start with the build: first the msys2 based one
  - cmd: bash bootstrap.sh
  - cmd: bash configure
    # for testing purpose removed, takes ages...
  - cmd: if %PYTHON_VERSION%==NONE  make

    # now make the msvc builds
  - cmd: if [%PYTHON_VERSION%] NEQ [NONE] make msvc
    # now build the with the right compiler for each python version
  - cmd: if [%PYTHON_VERSION%] NEQ [NONE] cd igraph-*-msvc
  - cmd: if %PYTHON_VERSION%==2.7 call "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\vcvars64.bat"
  - cmd: if %PYTHON_VERSION%==2.7 vcbuild.exe /upgrade
  - cmd: if %PYTHON_VERSION%==2.7 vcbuild.exe igraph.vcproj "Release|%TARGET_ARCH%"
  - cmd: if %PYTHON_VERSION%==3.4 call "%VS100COMNTOOLS%\vsvars32.bat"
  - cmd: if %PYTHON_VERSION%==3.4 VCUpgrade.exe /overwrite igraph.vcproj
  - cmd: if %PYTHON_VERSION%==3.4 msbuild.exe igraph.vcxproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - cmd: if %PYTHON_VERSION%==3.5 call "%VS140COMNTOOLS%\vsvars32.bat"
  - cmd: if %PYTHON_VERSION%==3.5 devenv /upgrade igraph.vcproj
  - cmd: if %PYTHON_VERSION%==3.5 msbuild.exe igraph.vcxproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  #install python libraries
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON%\\python.exe -m pip install python-igraph"
  - "%PYTHON%\\python.exe -m pip install igraph"
  - "%PYTHON%\\python.exe -m pip install numpy leidenalg"
  - ps: Bootstrap

cache:
  - C:\RLibrary

# Adapt as necessary starting from here

build_script:
  - travis-tool.sh install_deps

test_script:
  - travis-tool.sh run_tests

on_failure:
  - 7z a failure.zip *.Rcheck\*
  - appveyor PushArtifact failure.zip

artifacts:
  - path: '*.Rcheck\**\*.log'
    name: Logs

  - path: '*.Rcheck\**\*.out'
    name: Logs

  - path: '*.Rcheck\**\*.fail'
    name: Logs

  - path: '*.Rcheck\**\*.Rout'
    name: Logs

  - path: '\*_*.tar.gz'
    name: Bits

  - path: '\*_*.zip'
    name: Bits
